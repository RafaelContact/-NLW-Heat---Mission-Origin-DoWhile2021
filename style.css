*{
    margin: 0;
}
html, body {
 height: 100%;
 background: lightblue;
}
body{
    --gray: #E5E5E5;
    --back: #202024;
    /* como declarar uma variavel em uma cor. */
    /* color: var(--gray); */
    display: grid;
    color: #E5E5E5;
    place-items: center;
    /* Display grid propriedade nova muito interessante. place item center só funciona por causa do grid.*/
    font-family: 'Roboto', sans-serif;
    -webkit-font-smoothing: antialiased; 
    /* webkit é usado em alguns navegadores como chrome e safare, esses nagevadores vão usar a font indicada. */
   }
main{ 
    background: url(./images/Mobile.svg) no-repeat center/cover;
    width: 100vw;
    min-height: 812px;
    height: 100vh;
    max-width: 400px;
}
.container{
    max-width: 250px;
    margin: auto;
    text-align: center;
    padding-top: 60px;
}
.avatar { 
    width: 10rem;
    margin: 11.5rem auto 0;
    position: relative;
    
}
.avatar span{
    position: absolute;
    top: -15px;
    z-index: 1;
}
.avatar > img {
    width: 10rem;
    height: 11.5rem;
    object-fit: cover;
    /* propriedade css que ajuda a tirar a distorção de imagens que tem tamanho modificado. */
    clip-path: polygon(50% 0, 100% 25%, 100% 75%, 50% 100%, 0 75%, 0 25%)
}
h1{
    font-size: 1.5rem;
    margin-top: 1.5rem;
    font-weight: 700;
}
a{ 
 color: var(--gray);
 text-decoration: none;
 margin-top: 0.25rem;

 display: flex;
 gap: 0.75rem;

 justify-content: center;
 /*  poderia ter usado translate transform. */
}
ul{
    margin-top: 2.5rem;
    list-style: none;

    display: flex;
    gap: 0.5rem;
    justify-content: center;
    /* apenas o flax e grid podem usar o gap e justfy content. */
    /* flex-direction: column; usado para fazer coluna. */
    
}
p{
    margin-top: 2rem;
    font-weight: 400;
}
@media screen and (min-width: 500px) {

    body, html{
        background-color: #121214;
    }
    main{
        background-image: url(./images/Desktop.svg);
        max-width: 1400px;
    }
}